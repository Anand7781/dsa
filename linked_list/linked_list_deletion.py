# -*- coding: utf-8 -*-
"""linked_list_deletion.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U-RyZPkBYKh9H9WX3DTNjsD07PEPu84z
"""

class Node:
  def __init__(self , data):
    self.data = data
    self.nextPtr = None

class LinkedList:
  def __init__(self):
    self.head = None

  def insertionAtFront(self,new_data):
    # creation of new node with new_data
    new_node = Node(new_data)
    # updating the next pointer of new_node with head pointer
    new_node.nextPtr = self.head
    # update head with address of current node(new_node)
    self.head = new_node


  def deletion_node(self , pos):
    temp = self.head
    for i in range(pos-1):
      temp = temp.nextPtr
      if temp is None:
        return

    temp_next = temp.nextPtr.nextPtr
    temp.nextPtr = None
    temp.nextPtr = temp_next


  def Printlist(self):
    temp = self.head
    while temp:
      print(temp.data)
      temp = temp.nextPtr


ll = LinkedList()
ll.insertionAtFront(50)
ll.insertionAtFront(40)
ll.insertionAtFront(30)
ll.insertionAtFront(20)
ll.insertionAtFront(10)
ll.Printlist()
ll.deletion_node(4)
ll.Printlist()